#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.ComponentModel.DataAnnotations;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db5d32d05a67184955b4b8a1da007e6e9e")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertSelCourses(SelCourses instance);
    partial void UpdateSelCourses(SelCourses instance);
    partial void DeleteSelCourses(SelCourses instance);
    partial void InsertCourses(Courses instance);
    partial void UpdateCourses(Courses instance);
    partial void DeleteCourses(Courses instance);
    partial void InsertAuditFile(AuditFile instance);
    partial void UpdateAuditFile(AuditFile instance);
    partial void DeleteAuditFile(AuditFile instance);
    partial void InsertApplyNewCourse(ApplyNewCourse instance);
    partial void UpdateApplyNewCourse(ApplyNewCourse instance);
    partial void DeleteApplyNewCourse(ApplyNewCourse instance);
    partial void InsertUpLoadFile(UpLoadFile instance);
    partial void UpdateUpLoadFile(UpLoadFile instance);
    partial void DeleteUpLoadFile(UpLoadFile instance);
    #endregion
		
		public DataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db5d32d05a67184955b4b8a1da007e6e9eConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<SelCourses> SelCourses
		{
			get
			{
				return this.GetTable<SelCourses>();
			}
		}
		
		public System.Data.Linq.Table<Courses> Courses
		{
			get
			{
				return this.GetTable<Courses>();
			}
		}
		
		public System.Data.Linq.Table<AuditFile> AuditFile
		{
			get
			{
				return this.GetTable<AuditFile>();
			}
		}
		
		public System.Data.Linq.Table<ApplyNewCourse> ApplyNewCourse
		{
			get
			{
				return this.GetTable<ApplyNewCourse>();
			}
		}
		
		public System.Data.Linq.Table<UpLoadFile> UpLoadFile
		{
			get
			{
				return this.GetTable<UpLoadFile>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _PassWord;
		
		private string _UserType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public Users()
		{
			OnCreated();
		}
        [Key]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelCourses")]
	public partial class SelCourses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CID;
		
		private System.DateTime _SelTime;
		
		private int _SID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnSelTimeChanging(System.DateTime value);
    partial void OnSelTimeChanged();
    partial void OnSIDChanging(int value);
    partial void OnSIDChanged();
    #endregion
		
		public SelCourses()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelTime", DbType="DateTime NOT NULL")]
		public System.DateTime SelTime
		{
			get
			{
				return this._SelTime;
			}
			set
			{
				if ((this._SelTime != value))
				{
					this.OnSelTimeChanging(value);
					this.SendPropertyChanging();
					this._SelTime = value;
					this.SendPropertyChanged("SelTime");
					this.OnSelTimeChanged();
				}
			}
		}
        [Key]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
	public partial class Courses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private string _CName;
		
		private string _Teacher;
		
		private string _Flag;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnCNameChanging(string value);
    partial void OnCNameChanged();
    partial void OnTeacherChanging(string value);
    partial void OnTeacherChanged();
    partial void OnFlagChanging(string value);
    partial void OnFlagChanged();
    #endregion
		
		public Courses()
		{
			OnCreated();
		}
        [Key]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CName
		{
			get
			{
				return this._CName;
			}
			set
			{
				if ((this._CName != value))
				{
					this.OnCNameChanging(value);
					this.SendPropertyChanging();
					this._CName = value;
					this.SendPropertyChanged("CName");
					this.OnCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				if ((this._Teacher != value))
				{
					this.OnTeacherChanging(value);
					this.SendPropertyChanging();
					this._Teacher = value;
					this.SendPropertyChanged("Teacher");
					this.OnTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditFile")]
	public partial class AuditFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CID;
		
		private string _FileName;
		
		private string _FileURL;
		
		private int _AuditorID;
		
		private int _AuID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileURLChanging(string value);
    partial void OnFileURLChanged();
    partial void OnAuditorIDChanging(int value);
    partial void OnAuditorIDChanged();
    partial void OnAuIDChanging(int value);
    partial void OnAuIDChanged();
    #endregion
		
		public AuditFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileURL", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FileURL
		{
			get
			{
				return this._FileURL;
			}
			set
			{
				if ((this._FileURL != value))
				{
					this.OnFileURLChanging(value);
					this.SendPropertyChanging();
					this._FileURL = value;
					this.SendPropertyChanged("FileURL");
					this.OnFileURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorID", DbType="Int NOT NULL")]
		public int AuditorID
		{
			get
			{
				return this._AuditorID;
			}
			set
			{
				if ((this._AuditorID != value))
				{
					this.OnAuditorIDChanging(value);
					this.SendPropertyChanging();
					this._AuditorID = value;
					this.SendPropertyChanged("AuditorID");
					this.OnAuditorIDChanged();
				}
			}
		}
        [Key]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuID
		{
			get
			{
				return this._AuID;
			}
			set
			{
				if ((this._AuID != value))
				{
					this.OnAuIDChanging(value);
					this.SendPropertyChanging();
					this._AuID = value;
					this.SendPropertyChanged("AuID");
					this.OnAuIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplyNewCourse")]
	public partial class ApplyNewCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CourseName;
		
		private System.DateTime _ApplyTime;
		
		private int _AI;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnApplyTimeChanging(System.DateTime value);
    partial void OnApplyTimeChanged();
    partial void OnAIChanging(int value);
    partial void OnAIChanged();
    #endregion
		
		public ApplyNewCourse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyTime", DbType="DateTime NOT NULL")]
		public System.DateTime ApplyTime
		{
			get
			{
				return this._ApplyTime;
			}
			set
			{
				if ((this._ApplyTime != value))
				{
					this.OnApplyTimeChanging(value);
					this.SendPropertyChanging();
					this._ApplyTime = value;
					this.SendPropertyChanged("ApplyTime");
					this.OnApplyTimeChanged();
				}
			}
		}
        [Key]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AI
		{
			get
			{
				return this._AI;
			}
			set
			{
				if ((this._AI != value))
				{
					this.OnAIChanging(value);
					this.SendPropertyChanging();
					this._AI = value;
					this.SendPropertyChanged("AI");
					this.OnAIChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpLoadFile")]
	public partial class UpLoadFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CID;
		
		private string _FileName;
		
		private string _FUrl;
		
		private System.DateTime _UpLoadTime;
		
		private int _DownLoadCount;
		
		private int _UID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFUrlChanging(string value);
    partial void OnFUrlChanged();
    partial void OnUpLoadTimeChanging(System.DateTime value);
    partial void OnUpLoadTimeChanged();
    partial void OnDownLoadCountChanging(int value);
    partial void OnDownLoadCountChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    #endregion
		
		public UpLoadFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL")]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FUrl
		{
			get
			{
				return this._FUrl;
			}
			set
			{
				if ((this._FUrl != value))
				{
					this.OnFUrlChanging(value);
					this.SendPropertyChanging();
					this._FUrl = value;
					this.SendPropertyChanged("FUrl");
					this.OnFUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpLoadTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpLoadTime
		{
			get
			{
				return this._UpLoadTime;
			}
			set
			{
				if ((this._UpLoadTime != value))
				{
					this.OnUpLoadTimeChanging(value);
					this.SendPropertyChanging();
					this._UpLoadTime = value;
					this.SendPropertyChanged("UpLoadTime");
					this.OnUpLoadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownLoadCount", DbType="Int NOT NULL")]
		public int DownLoadCount
		{
			get
			{
				return this._DownLoadCount;
			}
			set
			{
				if ((this._DownLoadCount != value))
				{
					this.OnDownLoadCountChanging(value);
					this.SendPropertyChanging();
					this._DownLoadCount = value;
					this.SendPropertyChanged("DownLoadCount");
					this.OnDownLoadCountChanged();
				}
			}
		}
        [Key]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
